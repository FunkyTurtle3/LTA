#BlueJ class context
comment0.target=GUI
comment0.text=\r\n\ @author\ (Lasse,\ Leander,\ Victor)\r\n\ @version\ 1.1.0\r\n\ Viel\ Hilfe\ und\ inspiration\ durch\ https\://www.chatgpt.com.\r\n\ Auch\ Hilfe\ bei\ https\://docs.oracle.com.\r\n\ Das\ Graphical\ User\ Interface\ ist\ daf\u00FCr\ zust\u00E4ndig\ dem\ Spieler\ anzuzeigen\ was\ die\ GameEngine\ (Attribut)\ ausgibt.\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Zum\ Starten\ aufgerufene\ Methode\r\n
comment10.params=
comment10.target=javax.swing.JPanel\ createOutputField()
comment10.text=\r\n\ Methode\ mit\ der\ das\ Ausgabefeld\ generiert\ und\ ausgegeben\ wird\r\n\ @author\ (Lasse,\ Leander,\ Victor)\r\n
comment11.params=
comment11.target=javax.swing.JButton\ createZeroButton()
comment11.text=\r\n\ Erstellt\ einen\ Button\ ohne\ Aussehen\ und\ Inhalt\ um\ ihn\ entsprechend\ anzuzeigen\ ohne,\ dass\ er\ sichtbar\ ist\r\n\ @author\ (Lasse,\ Leander)\r\n\ @sources\ (Hilfe\ von\ ChatGPT)\r\n
comment12.params=
comment12.target=javax.swing.plaf.basic.BasicScrollBarUI\ createScrollBar()
comment12.text=\r\n\ Methode\ mit\ der,\ eine\ ScrollBar\ generiert\ und\ ausgegeben\ wird\r\n\ @author\ (Lasse,\ Leander)\r\n\ @sources\ (Hilfe\ von\ ChatGPT)\r\n
comment13.params=
comment13.target=void\ configureScrollBarColors()
comment14.params=g\ c\ thumbBounds
comment14.target=void\ paintThumb(java.awt.Graphics,\ javax.swing.JComponent,\ java.awt.Rectangle)
comment15.params=orientation
comment15.target=javax.swing.JButton\ createDecreaseButton(int)
comment16.params=orientation
comment16.target=javax.swing.JButton\ createIncreaseButton(int)
comment17.params=
comment17.target=void\ executeInput()
comment17.text=\r\n\ Methode\ durch\ die\ der\ GameEngine\ der\ Abruf\ zur\ Verarbeitung\ eines\ Inputs\ gegeben\ wird\r\n\ @author\ (Lasse,\ Leander)\r\n
comment18.params=e
comment18.target=void\ keyTyped(java.awt.event.KeyEvent)
comment19.params=e
comment19.target=void\ keyPressed(java.awt.event.KeyEvent)
comment19.text=\r\n\ Erm\u00F6glicht\ es\ mit\ den\ Pfeiltasten\ (oben\ und\ unten)\ zwischen\ vorherigen\ Eingaben\ zu\ wechseln\ um\ das\ Spielgeschehen\ zu\ beschleunigen\ und\ tippen\ zu\ ersparen\r\n\ @author\ (LAsse,\ Leander)\r\n
comment2.params=
comment2.target=GUI()
comment2.text=\r\n\ Konstruktor\ f\u00FCr\ die\ GUI\ Klasse\r\n\ @author\ (Lasse,\ Leander)\r\n
comment20.params=e
comment20.target=void\ keyReleased(java.awt.event.KeyEvent)
comment3.params=
comment3.target=void\ setStartDescription()
comment4.params=
comment4.target=void\ setUpLogo()
comment4.text=\r\n\ Ver\u00E4ndert\ das\ logo\ des\ Fenster\ -\ rein\ kosmetisch\r\n\ Logo\ kreiert\ mit\ https\://www.figma.com\r\n
comment5.params=
comment5.target=void\ setUpFont()
comment5.text=\r\n\ Macht\ den\ importierten\ "elegantTypewriter"\ Font\ f\u00FCr\ die\ GUI\ nutzbar.\r\n\ Die\ importierte\ Schriftart\ ist\ frei\ nutzbar\ f\u00FCr\ nicht-kommerzielle\ Zwecke.\r\n\ Rein\ kosmetischer\ Natur\r\n\ @author\ (Lasse,\ Victor)\r\n
comment6.params=
comment6.target=void\ createWindow()
comment6.text=\r\n\ Methode\ mit\ der\ das\ Fenster\ generiert\ und\ ausgegeben\ wird\r\n\ @author\ (Lasse,\ Leander,\ Victor)\r\n
comment7.params=
comment7.target=javax.swing.JPanel\ createInputField()
comment7.text=\r\n\ Methode\ mit\ der\ das\ Eingabefeld\ generiert\ und\ ausgegeben\ wird\r\n\ @author\ (Lasse,\ Leander,\ Victor)\r\n
comment8.params=
comment8.target=javax.swing.JButton\ createQuitButton()
comment8.text=\r\n\ Methode\ mit\ welcher\ der\ "Spiel\ schlie\u00DFen"-Knopf\ generiert\ und\ ausgegeben\ wird\r\n\ @author\ (Lasse,\ Leander,\ Victor)\r\n
comment9.params=
comment9.target=javax.swing.JButton\ createEnterButton()
comment9.text=\r\n\ Methode\ mit\ welcher\ der\ Eingabe-Knopf\ generiert\ und\ ausgegeben\ wird\r\n\ @author\ (Lasse,\ Leander,\ Victor)\r\n
numComments=21
